<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Cobble&#39;s Personal Blog</title>
    <link>https://cooble.github.io/</link>
    <description>Recent content on Cobble&#39;s Personal Blog</description>
    <image>
      <url>https://cooble.github.io/papermod-cover.png</url>
      <link>https://cooble.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 02 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://cooble.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PaperMod Site Height Fix</title>
      <link>https://cooble.github.io/posts/2022-06-02-hugo-height-fix/</link>
      <pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://cooble.github.io/posts/2022-06-02-hugo-height-fix/</guid>
      <description>Ever since I caught a glimpse of the elegant PaperMod theme of Hugo static site builder, I knew I got to use it. While PaperMod theme is very slick and fast it has a few minor drawbacks, which need to be addressed.
One of them being wrong height of the title page when navigation element is wrapped. This looks kinda cumbersome mainly on mobile devices, where, the page is just too high when no content is shown.</description>
    </item>
    
    <item>
      <title>Lua, Items and XMas</title>
      <link>https://cooble.github.io/posts/niceday/_posts/2019-12-24-lua/</link>
      <pubDate>Tue, 24 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cooble.github.io/posts/niceday/_posts/2019-12-24-lua/</guid>
      <description>Even though adding scripting language to the engine was in DEEP FUTURE plans, once I realized how easy it would be to just rewrite one text line, hit enter and spawn particles with slightly tweaked velocities instead of recompiling the whole game again I finally decided that that time had come. Ladies and gentlemen, Brace yourself for&amp;hellip;
The Story of adding Lua: Adding lua itself was the easiest thing, simply add statically native lua lib and that was it, then I used ConsoleWindow template found in imgui_demo.</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://cooble.github.io/aboutme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cooble.github.io/aboutme/</guid>
      <description></description>
    </item>
    
    
    <item>
      <title>GUI Module (Engine)</title>
      <link>https://cooble.github.io/posts/niceday/_posts/2019-11-23-gui/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cooble.github.io/posts/niceday/_posts/2019-11-23-gui/</guid>
      <description>We all know that making a GUI from scratch can be truly difficult and time consuming and maybe even boring, it would make sense then if engine provided such a thing, wouldn&amp;rsquo;t it? Ok, Ok, lets do it&amp;hellip; (I could have just used IMGUI but&amp;hellip;)
Basic GUI module in engine (13_11_2019) in order to start with inventory, one must create some sort of GUI before&amp;hellip; currently contains Windows (which can overlap), Label, Button, CheckBox, TextBox, HorizontalSlider and Image + layouts: (Column, Row, Grid) There is one GUIContext which cares about parent-child structure and events of GUIElements and GUIRenderer, which renders those elements positions are relative to the parental element currently no resizability to change a color, one has to change the GUIRenderer Advanced GUI in engine (23_11_2019) Added view, (which is rendered to another texture before being rendered on the screen) Better text render, added kerning!</description>
    </item>
    
    <item>
      <title>Lights, Day/Night cycle, Entities</title>
      <link>https://cooble.github.io/posts/niceday/_posts/2019-08-12-dynamic-lights/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cooble.github.io/posts/niceday/_posts/2019-08-12-dynamic-lights/</guid>
      <description>Multithreaded lights, Inheritance Entity System (maybe will change to ECS in the future)(22_07_2019) Added NBT to save and load entities. (No entity saving yet, though.) Added basic physics system with polygon collision detection. In the pic: The first entity after Player was (who would have guessed&amp;hellip;) TNT!
In the pic: red Zombie attacks black Player. (and then mysteriously disappears up in the sky)
Smooth wallLight vs edgy blockLight, Day/Night cycle (12_08_2019) Added dynamically created TextureAtlas.</description>
    </item>
    
    <item>
      <title>ParticleSystem, Trees, Flowers, PlayerSprite</title>
      <link>https://cooble.github.io/posts/niceday/_posts/2019-08-25-particles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cooble.github.io/posts/niceday/_posts/2019-08-25-particles/</guid>
      <description>Ability to walk on blocks which are 1high without jumping. Player has a walk animation. Added entity health bar. Crude ParticleSystem using BatchRenderer2D temporarily, will have its own renderer with shader in the future. Can do 3500 particles without a problem. Added multiblock structure = tree and its generator. After placing a sapling block, sapling tile entity counts the worldtime and then calls TreeGen. Trees have random number of branches(dry or normal) and random corona.</description>
    </item>
    
    
    <item>
      <title>The Great Start</title>
      <link>https://cooble.github.io/posts/niceday/_posts/2019-06-19-great-start/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cooble.github.io/posts/niceday/_posts/2019-06-19-great-start/</guid>
      <description>Pictured changelog: Basic tile render (03_05_2019) Corner tile render (06_05_2019) Lighting prototype with water-spill-algorithm (18_05_2019) Platforms, grass, sky (20_05_2019) Blocks, Walls, Background (26_05_2019) Colorful block corners, glass, procedural chunk generation (14_06_2019) Dynamic and Cached monochromatic lighting system (19_06_2019) Cached lighting is only calculated onBlockChange </description>
    </item>
    
  </channel>
</rss>
